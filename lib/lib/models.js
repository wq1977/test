Object.defineProperty(exports,"__esModule",{value:true});exports.store=exports.saga=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _redux=require('redux');var _reduxSaga=require('redux-saga');var _reduxSaga2=_interopRequireDefault(_reduxSaga);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var saga=exports.saga=(0,_reduxSaga2.default)();var store=exports.store=(0,_redux.createStore)(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{messages:[],chatrooms:[]};var action=arguments[1];if(action.type==='save'){return _extends({},state,action.payload);}else if(action.type==='chatrooms'){var chatrooms=action.payload.concat(state.chatrooms||[]);return _extends({},state,{chatrooms:chatrooms});}else if(action.type==='room keyid'){var _chatrooms=state.chatrooms||[];for(var i=0;i<_chatrooms.length;i++){if(_chatrooms[i].key===action.payload.room.key){_chatrooms[i].keyid=action.payload.keyid;}}_chatrooms=[].concat(_chatrooms);return _extends({},state,{chatrooms:_chatrooms});}else if(action.type==='new message'){console.log(action.payload.msg);var messages=state.messages||[];messages=[].concat(messages,[action.payload.msg]);return _extends({},state,{messages:messages});}return state;},(0,_redux.applyMiddleware)(saga));